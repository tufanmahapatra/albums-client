
# Okta specific OAuth 2 related properties 

spring.security.oauth2.client.registration.okta.client-name=myalbum
spring.security.oauth2.client.registration.okta.client-id=0oa58trtjnfjHfk8I5d7
spring.security.oauth2.client.registration.okta.client-secret=QxF9nY0WJxDSL4Nhrg6jCx1u5kB-fBkUqkiNKnr9
spring.security.oauth2.client.registration.okta.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.okta.scope=openid,profile,email,photolibrary.read

# You need to set the issuer correctly. It will look like https://dev-<SOME_NUMBER>.okta.com/oauth2/default
okta.issuer.uri=https://dev-61275755.okta.com/oauth2/default

spring.security.oauth2.client.provider.okta.authorization-uri: https://dev-61275755.okta.com/oauth2/default/v1/authorize
spring.security.oauth2.client.provider.okta.token-uri:https://dev-61275755.okta.com/oauth2/default/v1/token
spring.security.oauth2.client.provider.okta.user-info-uri: https://dev-61275755.okta.com/oauth2/default/v1/userinfo
spring.security.oauth2.client.provider.okta.jwk-set-uri: https://dev-61275755.okta.com/oauth2/default/v1/keys

# You need to make sure this Resource API is running locally at port 8081
photolibrary.resource.uri=http://localhost:8081

photolibrary.authorizer=Okta
photolibrary.albums.uri=http://localhost:8081/fakealbums/albums
photolibrary.photos.uri=http://localhost:8081/fakealbums/mediaItems
photolibrary.logout.url=https://dev-61275755.okta.com/oauth2/default/v1/logout
